// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`typeDefs MockObject __type should match snapshot 1`] = `
Object {
  "MockObject": Object {
    "fields": Array [
      Object {
        "args": Array [],
        "description": "",
        "name": "address",
        "type": Object {
          "name": null,
        },
      },
      Object {
        "args": Array [],
        "description": "",
        "name": "Boolean",
        "type": Object {
          "name": null,
        },
      },
      Object {
        "args": Array [],
        "description": "",
        "name": "commerce",
        "type": Object {
          "name": null,
        },
      },
      Object {
        "args": Array [],
        "description": "",
        "name": "company",
        "type": Object {
          "name": null,
        },
      },
      Object {
        "args": Array [],
        "description": "",
        "name": "database",
        "type": Object {
          "name": null,
        },
      },
      Object {
        "args": Array [],
        "description": "",
        "name": "Float",
        "type": Object {
          "name": null,
        },
      },
      Object {
        "args": Array [
          Object {
            "defaultValue": null,
            "description": "",
            "name": "value",
          },
        ],
        "description": "",
        "name": "ID",
        "type": Object {
          "name": null,
        },
      },
      Object {
        "args": Array [],
        "description": "",
        "name": "Int",
        "type": Object {
          "name": null,
        },
      },
      Object {
        "args": Array [
          Object {
            "defaultValue": "0",
            "description": "",
            "name": "length",
          },
        ],
        "description": "",
        "name": "List",
        "type": Object {
          "name": null,
        },
      },
      Object {
        "args": Array [
          Object {
            "defaultValue": null,
            "description": "",
            "name": "seed",
          },
        ],
        "description": "",
        "name": "Mock",
        "type": Object {
          "name": null,
        },
      },
      Object {
        "args": Array [],
        "description": "",
        "name": "Null",
        "type": Object {
          "name": "String",
        },
      },
      Object {
        "args": Array [
          Object {
            "defaultValue": null,
            "description": "",
            "name": "value",
          },
        ],
        "description": "",
        "name": "String",
        "type": Object {
          "name": null,
        },
      },
    ],
    "inputFields": null,
  },
}
`;

exports[`typeDefs MockObject should return consistent, random values 1`] = `
Object {
  "Mock": Object {
    "Boolean": true,
    "Float": 0.7072,
    "ID": "70814",
    "Int": 83994,
    "List": Array [
      Object {
        "ID": "29090",
      },
      Object {
        "ID": "12132",
      },
    ],
    "Mock": Object {
      "ID": "55079",
    },
    "Null": null,
    "String": "Impedit voluptas nostrum.",
  },
}
`;

exports[`typeDefs MockObject should support faker.js 1`] = `
Object {
  "Mock": Object {
    "address": Object {
      "city": "Antonechester",
      "cityPrefix": "Lake",
      "country": "Finland",
      "countryCode": "BQ",
      "county": "Borders",
      "latitude": 12.476,
      "longitude": 141.4609,
      "secondaryAddress": "Apt. 801",
      "state": "Arizona",
      "stateAbbr": "HI",
      "streetAddress": "00460 Klein Crossroad",
      "streetName": "Gottlieb Ports",
      "streetPrefix": "b",
      "streetSuffix": "Ranch",
      "zipCode": "59075",
    },
    "commerce": Object {
      "color": "silver",
      "department": "Computers",
      "price": 402,
      "product": "Shirt",
      "productAdjective": "Awesome",
      "productMaterial": "Plastic",
      "productName": "Incredible Metal Soap",
    },
    "company": Object {
      "bs": "magnetic morph platforms",
      "bsAdjective": "bleeding-edge",
      "bsBuzz": "deliver",
      "bsNoun": "deliverables",
      "catchPhrase": "Front-line demand-driven contingency",
      "catchPhraseAdjective": "Seamless",
      "catchPhraseDescriptor": "secondary",
      "catchPhraseNoun": "success",
      "companyName": "Raynor - Weber",
      "companySuffix": "Inc",
      "suffixes": Array [
        "Inc",
        "and Sons",
        "LLC",
        "Group",
      ],
    },
    "database": Object {
      "collation": "cp1250_general_ci",
      "column": "title",
      "engine": "BLACKHOLE",
      "type": "timestamp",
    },
  },
}
`;

exports[`typeDefs Query __type should match snapshot 1`] = `
Object {
  "Query": Object {
    "fields": Array [
      Object {
        "args": Array [
          Object {
            "defaultValue": null,
            "description": "",
            "name": "seed",
          },
        ],
        "description": "",
        "name": "Mock",
        "type": Object {
          "name": "MockObject",
        },
      },
    ],
  },
}
`;
